# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Monitors
set $laptop eDP-1
set $monitor1 "Dell Inc. DELL U2715H GH85D7BD0T3S"
set $monitor2 "Dell Inc. DELL U2715H GH85D686043S"
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu rofi -show run

### Font
#
### Colors
#
client.focused             #4D679A   #b58900    #fdf6e3
client.focused_inactive    #586e75   #657b83    #fdf6e3
client.unfocused           #586e75   #002b36    #fdf6e3
client.urgent              #FF0000   #FF0000    #fdf6e3

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg #002B36 solid_color
#xwayland disable

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output $laptop scale 2
#output $laptop pos 0 0 res 3200x1800
#output $laptop scale_filter smart
output $monitor1 pos 0 0 res 2560x1440@60Hz
output $monitor2 pos 2560 0 res 2560x1440@60Hz
output $monitor1 scale 1
output $monitor2 scale 1
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable 

### Window border style
default_border pixel 1
default_floating_border pixel 1
hide_edge_borders smart_no_gaps

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

### Input configuration # # Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
    xkb_layout se
    #xkb_options caps:swapescape
    
    tap enabled
    dwt enabled
    pointer_accel -0.0
    accel_profile flat

}


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    
    # Kill focused window
    bindsym $mod+Shift+q kill
    
    # Start your launcher
    bindsym $mod+d exec $menu
    
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal
    
    # Reload the configuration file
    bindsym $mod+Shift+c reload
    
    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    
    # Lock computer with Ctrl+Alt+Del
    bindsym Control+Mod1+Delete exec swaylock -f -c 000000
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right
    
    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
    
    # Move workspace to other outputs
    bindsym $mod+less move workspace to output left
    bindsym $mod+greater move workspace to output left

    # Multimedia keybindings
    bindsym XF86AudioNext         exec --no-startup-id playerctl next
    bindsym XF86AudioPlay         exec --no-startup-id playerctl play-pause
    bindsym XF86AudioPrev         exec --no-startup-id playerctl previous
    bindsym XF86AudioMute         exec --no-startup-id amixer set Master toggle
    bindsym XF86AudioLowerVolume  exec --no-startup-id amixer set Master 5%-
    bindsym XF86AudioRaiseVolume  exec --no-startup-id amixer set Master 5%+
    bindsym XF86Search            exec --no-startup-id $BROWSER https://www.google.se; workspace $ws1
    bindsym XF86MonBrightnessUp   exec --no-startup-id light -A 10
    bindsym XF86MonBrightnessDown exec --no-startup-id light -U 10
    
#
# Workspaces:
#
    set $ws1 "1:" 
    set $ws2 "2:"
    set $ws3 "3:"
    set $ws4 "4:"
    set $ws5 "5:"
    set $ws6 "6:"
    set $ws7 "7:"
    set $ws8 "8:"
    set $ws9 "9:"
    set $ws10 "10"
    
    # Switch to workspace
    bindsym $mod+1 workspace $ws1 
    bindsym $mod+2 workspace $ws2 
    bindsym $mod+3 workspace $ws3 
    bindsym $mod+4 workspace $ws4 
    bindsym $mod+5 workspace $ws5 
    bindsym $mod+6 workspace $ws6 
    bindsym $mod+7 workspace $ws7 
    bindsym $mod+8 workspace $ws8 
    bindsym $mod+9 workspace $ws9 
    bindsym $mod+0 workspace $ws10
    
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1 
    bindsym $mod+Shift+2 move container to workspace $ws2 
    bindsym $mod+Shift+3 move container to workspace $ws3 
    bindsym $mod+Shift+4 move container to workspace $ws4 
    bindsym $mod+Shift+5 move container to workspace $ws5 
    bindsym $mod+Shift+6 move container to workspace $ws6 
    bindsym $mod+Shift+7 move container to workspace $ws7 
    bindsym $mod+Shift+8 move container to workspace $ws8 
    bindsym $mod+Shift+9 move container to workspace $ws9 
    bindsym $mod+Shift+0 move container to workspace $ws10
    
    # Assign workspace to specific monitor   
    workspace $ws1 output $monitor1 $laptop 
    workspace $ws2 output $monitor1 $laptop 
    workspace $ws3 output $monitor1 $laptop 
    workspace $ws4 output $monitor1 $laptop 
    workspace $ws5 output $monitor1 $laptop 
    workspace $ws6 output $monitor1 $laptop 
    workspace $ws7 output $monitor2 $laptop 
    workspace $ws8 output $monitor2 $laptop 
    workspace $ws9 output $monitor2 $laptop 
    workspace $ws10 output $laptop $monitor2  
    
    # Workspace assignments
    assign [class="(?i)google-chrome"] → $ws1
    assign [class="(?i)brave-browser"] → $ws1
    assign [class="(?i)chromium"] → $ws1
    assign [app_id="firefox"] → $ws1
    assign [class="(?i)jetbrains-idea"] → $ws2
    assign [class="(?i)jetbrains-idea"] → $ws2
    assign [class="(?i)jetbrains-idea" instance="(?i)sun-awt-X11-XFramePeer"] → $ws2
    assign [class="(?i)Atom"]→ $ws5
    assign [class="(?i)jetbrains-datagrip" instance="(?i)sun-awt-X11-XFramePeer"] → $ws7
    assign [class="(?i)Pidgin"] → $ws8
    assign [class="(?i)Spotify"] → $ws8
    assign [class="(?i)microsoft teams - preview"] → $ws8
    assign [class="(?i)hiri"] → $ws8
    assign [class="(?i)Skype"] → $ws9
    assign [class="(?i)Slack"] → $ws9

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+q layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+s move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+s scratchpad show

    for_window [app_id="scratchpad"] border pixel 1; move scratchpad
    exec --no-startup-id alacritty --class scratchpad --title scratchpad 
    #exec --no-startup-id urxvt -name scratchpad -geometry 130x30
 
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    tray_output *

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command /usr/bin/bumblebee-status -m task sensors nic load memory disk amixer battery date time -p time.format="%H:%M:%S" -p memory.format="{percent:02.01f}%" -p disk.format="{percent:02.1f}%" -p date.left-click='notify-week.sh' -p nic.exclude='lo,virbr,docker,vboxnet,veth,br' -t solarized-powerline

    colors {
        background #002b36
        statusline #839496
        separator  #b58900
        # colorclass       <border> <background> <text>
        focused_workspace  #b58900  #002b36      #b58900
        active_workspace   #002b36  #002b36      #ffffff
        inactive_workspace #002b36  #002b36      #657b83
        urgent_workspace   #b58900  #dc322f      #fdf6e3
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

#
# Application specific config
#

    for_window [class="(?i)google-chrome"] border none
    for_window [class="(?i)chromium"] border none
    for_window [class="(?i)dwb"] border none
    for_window [class="(?i)mpv"] floating enable

    # Post-start workspace assignment (probably due to something wrong)
    for_window [class="(?i)idea"] move container to workspace $ws2

    # Float Firefox preferences window.
    for_window [instance="^Toplevel"] floating enable
    #
    # Make intellij not lose focus on popup dialogs
    #for_window [class="^jetbrains-.+" window_type=dialog] focus
    #for_window [class="^jetbrains-.+" title="win0"] floating enable
    #for_window [class="^jetbrains-.+" title=".+IDEA"] floating disable
    #for_window [class="^jetbrains-.+" title=".+DataGrip"] floating disable

#
# Start apps
#

    bindsym $mod+c exec $BROWSER
    bindsym $mod+Mod1+c exec "$BROWSER --incognito"
    bindsym $mod+Shift+Return exec "urxvt -e ranger"
    bindsym Shift+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') ~/screenshots/$(date +'%Y-%m-%d-%H%M%S_grim.png')
    bindsym Print exec ~/.bin/snipping-tool

include /etc/sway/config.d/*

#
# Autostart 
#
exec nm-applet --indicator
#export WLR_DRM_NO_MODIFIERS=1
